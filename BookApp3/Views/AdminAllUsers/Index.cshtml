@model IEnumerable<BookApp3.Models.User>
@{
    ViewData["Title"] = "All Users";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/home.css?v=1.1" />
    <style>
        :root {
            --deep-blue: #1a2a3a;
            --moonlight: #f0f4f8;
            --lavender: #b4b4ff;
            --gold: #ffd700;
            --accent: #ff9aa2;
            --brown: #8B4513;
            --text-primary: #333;
            --text-secondary: #666;
            --border: rgba(180, 180, 255, 0.2);
            --surface: rgba(255, 255, 255, 0.05);
            --elevated: rgba(255, 255, 255, 0.1);
            --accent-light: #ffb7bd;
        }

        body {
            background-color: var(--deep-blue);
            font-family: "Montserrat", sans-serif;
            color: var(--moonlight);
        }

        .btn-admin {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
        }

        .btn-edit {
            background-color: var(--lavender);
            color: var(--deep-blue);
        }

        .btn-delete {
            background-color: var(--accent);
            color: white;
        }

        .btn-add {
            background-color: var(--accent);
            color: white;
            border: none;
            padding: 0.8rem 2rem;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .btn-add:hover {
                background-color: #ff7b8a;
                transform: translateY(-3px);
                box-shadow: 0 8px 15px rgba(255, 154, 162, 0.3);
            }

        .user-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            margin-bottom: 20px;
            overflow: hidden;
            height: 100%;
        }

            .user-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
            }

        .user-avatar {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 50%;
            border: 3px solid #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .user-header {
            background-size: cover;
            background-position: center;
            height: 100px;
            position: relative;
        }

        .user-body {
            padding: 20px;
            position: relative;
            margin-top: -50px;
        }

        .action-buttons .btn {
            margin-right: 5px;
            margin-bottom: 5px;
        }

        .search-box {
            max-width: 500px;
            margin: 0 auto 30px;
        }

        .user-stats {
            display: flex;
            justify-content: space-around;
            text-align: center;
            margin: 15px 0;
        }

        .stat-item {
            flex: 1;
        }

        .stat-value {
            font-weight: bold;
            font-size: 1.2rem;
            color: black;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
        }

        /* Modal styling */
        .modal-content {
            background: var(--deep-blue);
            color: var(--moonlight);
            border: 1px solid var(--border);
        }
        
        .modal-header {
            border-bottom: 1px solid var(--border);
        }
        
        .modal-footer {
            border-top: 1px solid var(--border);
        }
    </style>
</head>
<body>
    <div class="container py-5">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="text-center mb-0"><i class="fas fa-users me-3"></i> All Users</h2>
            @* <a href="#" class="btn btn-add"> *@
            @*     <i class="fas fa-plus me-2"></i>Add New User *@
            @* </a> *@
        </div>

        @if (!Model.Any())
        {
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i> No users found.
            </div>
        }
        else
        {
            <div class="row">
                @foreach (var user in Model)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="user-card">
                            <div class="user-header" style="background-image: url('@(user.Bg_Picture ?? "https://i.pinimg.com/736x/50/1a/43/501a430ff76b05322856c9075e9475cb.jpg")');">
                            </div>

                            <div class="user-body text-center">
                                <img src="@(user.Profile_Picture ?? "https://i.pinimg.com/736x/0f/68/94/0f6894e539589a50809e45833c8bb6c4.jpg")"
                                     alt="@user.User_Name" class="user-avatar mb-3">

                                <h5 class="mb-1">@user.User_Name</h5>
                                <p class="text-muted mb-3">@user.Email</p>

                                @if (!string.IsNullOrEmpty(user.Bio))
                                {
                                    <p class="mb-3">@user.Bio</p>
                                }
                                <div class="user-stats">
                                    <div class="stat-item">
                                        <div class="stat-value">@(user.Reviews?.Count(r => !string.IsNullOrEmpty(r.Review_Text)) ?? 0)</div>
                                        <div class="stat-label">Text Reviews</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value">@(user.Reviews?.Count(r => r.Rating > 0) ?? 0)</div>
                                        <div class="stat-label">Ratings Given</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value">@((user.Birthdate?.ToString("yyyy-MM-dd")) ?? "N/A")</div>
                                        <div class="stat-label">Birthdate</div>
                                    </div>
                                </div>



                                <div class="d-flex justify-content-center action-buttons">
                                    @* <a asp-action="Edit" asp-route-id="@user.User_Id" *@
                                    @*    class="btn btn-sm btn-edit btn-admin"> *@
                                    @*     <i class="fas fa-edit me-1"></i> Edit *@
                                    @* </a> *@

                                    <button class="btn btn-sm btn-delete btn-admin"
                                            data-bs-toggle="modal"
                                            data-bs-target="#confirmDeleteModal"
                                            onclick="setDeleteId('@user.User_Id', '@user.User_Name')">
                                        <i class="fas fa-trash me-1"></i> Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm User Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete user <strong id="userNameToDelete"></strong>?</p>
                    <p class="text-danger">This action cannot be undone and will remove all associated reviews and data.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form id="deleteForm" asp-action="Delete" method="post">
                        <input type="hidden" id="userIdToDelete" name="id" />
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">Delete Permanently</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function setDeleteId(userId, userName) {
            document.getElementById('userIdToDelete').value = userId;
            document.getElementById('userNameToDelete').textContent = userName;
        }

        // Search functionality (commented out in HTML)
        document.addEventListener('DOMContentLoaded', function() {
            const searchButton = document.getElementById('searchButton');
            const userSearch = document.getElementById('userSearch');
            const resetSearch = document.getElementById('resetSearch');
            
            if (searchButton && userSearch && resetSearch) {
                searchButton.addEventListener('click', performSearch);
                userSearch.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') performSearch();
                });
                resetSearch.addEventListener('click', function() {
                    userSearch.value = '';
                    performSearch();
                });
            }
            
            function performSearch() {
                const searchTerm = document.getElementById('userSearch').value.toLowerCase();
                document.querySelectorAll('.user-card').forEach(card => {
                    const userName = card.querySelector('h5').textContent.toLowerCase();
                    const userEmail = card.querySelector('.text-muted').textContent.toLowerCase();

                    if (userName.includes(searchTerm) || userEmail.includes(searchTerm)) {
                        card.closest('.col-md-6').style.display = 'block';
                    } else {
                        card.closest('.col-md-6').style.display = 'none';
                    }
                });
            }
        });
    </script>
</body>
</html>